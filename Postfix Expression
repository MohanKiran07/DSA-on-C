#include <stdio.h>
#include <stdbool.h>
#include <ctype.h>

#define MAX 100

int stack[MAX];
int top = -1;

bool isEmpty() {
    return top == -1;
}

bool isFull() {
    return top == MAX - 1;
}

void push(int value) {
    if (isFull()) {
        printf("Stack Overflow\n");
        return;
    }
    stack[++top] = value;
}

int pop() {
    if (isEmpty()) {
        printf("Stack Underflow\n");
        return -1;
    }
    return stack[top--];
}

int evaluateExpression(char expr[]) {
    int i = 0;
    while (expr[i] != '\0') {
        if (isdigit(expr[i])) {
            push(expr[i] - '0');
        } else {
            int op2 = pop();
            int op1 = pop();
            switch (expr[i]) {
                case '-':
                    push(op1 - op2);
                    break;
                case '+':
                    push(op1 + op2);
                    break;
                case '/':
                    push(op1 / op2);
                    break;
                case '*':
                    push(op1 * op2);
                    break;
                case '^':
                    push(op1 ^ op2);
                    break;
                default:
                    printf("Error! Invalid Operator\n");
                    return -1;
            }
        }
        i++;
    }
    return pop();
}

int main() {
    char expr[100];
    printf("Enter Expression: ");
    scanf("%s", expr);
    int result = evaluateExpression(expr);
    if (result != -1) {
        printf("Result = %d\n", result);
    }
    return 0;
}
